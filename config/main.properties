#
# Sloth: An Energy-Efficient Activity Recognition System
# Copyright 2016 Pejman Ghorbanzade <mail@ghorbanzade.com>
# Released under the terms of MIT License
# https://github.com/ghorbanzade/sloth/blob/master/LICENSE
#

# name of serial port to open
serial.name = /dev/ttyUSB0

# baud rate of serial port
serial.baudrate = 9600

# time interval serial should timeout if it cannot be opened
serial.timeout = 3000

# time interval the main thread should allow serial reader to run
serial.listening.time = 20000

server.upload.sleep.interval = 30000

# amount of time (in ms) that packet reader should sleep if no data is
# received by serial reader
packet.reader.sleep.interval = 200

# amount of time (in ms) that packet processor should sleep if no packet is
# queued for processing
packet.processor.sleep.interval = 200

# amount of time (in ms) that cloud connector should sleep if no files are
# queued to be posted to remote server
cloud.connector.sleep.interval = 1000

# time interval (in ms) between every generation of activity model
learner.sleep.interval = 15000

# time interval (in ms) between classification of activity instances
classifier.sleep.interval = 15000

# minimum accuracy that a predicted result must have in order to be reported
classifier.accuracy.threshold = 0

# path to the file whose content should be printed once program starts
startup.banner = /startup.banner

# path to the file whose content should be printed once program terminates
shutdown.banner = /shutdown.banner

# path to the file containing wsn configuration
config.file.wsn = ./config/wsn-config.json

config.file.server = ./config/server.properties

# number of model segments in theta direction
recognition.model.segments = 8

# directory where instances of classified activities are stored
dir.classified.activities = ./data/activities/classified

# directory where instances of learned activities are stored
dir.learned.activities = ./data/activities/learned

# maximum number of activities to include in every post message
cc.max.post.size = 10

# the url to which data should be posted
cc.post.url = http://api.ghorbanzade.com

# the token with which data should be posted
cc.user.token = your-token

# the mode program will be running in (values are either 'learn' or 'classify')
mode = learn

# the activity being learned if the mode is learn
learning.activity = walking
